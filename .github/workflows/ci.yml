name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install project (dev)
        run: |
          python -m pip install -e ".[dev]"

      - name: Lint (ruff)
        run: ruff check .

      - name: type check (mypy)
        run: mypy src utils

      - name: Run tests with coverage
        run: |
          python -m pytest --cov=src --cov-report=term-missing --cov-report=xml

      - name: Generate coverage badge
        uses: tj-actions/coverage-badge-py@v2
        with:
          output: coverage.svg

      - name: Verify changed files
        uses: tj-actions/verify-changed-files@v20
        id: verify
        with:
          files: coverage.svg

      - name: Commit badge
        if: steps.verify.outputs.files_changed == 'true' && github.event_name == 'push' && github.repository == 'piratax007/MatPlotX'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add coverage.svg
          git commit -m "chore: update coverage badge" || echo "No changes"
          git pull -r
          git push

      - name: Upload coverage XML (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore